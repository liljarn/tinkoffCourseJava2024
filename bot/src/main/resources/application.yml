app:
  telegram-token: unset
  topic-name: "bot-scrapper-mq"
  use-queue: true

management:
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: 8091
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus: metrics

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    cache-names:
      - rate-limit-bucket
    caffeine:
      spec: maximumSize=1000000,expireAfterAccess=3600s
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_URL:}
      group-id: bot
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: edu.java.bot.dto.request.LinkUpdate
    producer:
      bootstrap-servers: ${KAFKA_URL:}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    bootstrap-servers: ${KAFKA_URL:}

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui

client:
  bot:
    base-url: ${SCRAPPER_URL:}

retry-config:
  retries:
    - client: scrapper
      type: exponential
      max-attempts: 5
      step: 2
      delay: 2s
      codes:
        - 500

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-bucket
      url: .*
      http-status-code: too_many_requests
      http-response-headers:
        Content-Type: "application/json; charset=utf-8"
      http-response-body: |
        {
          "description": "Превышено количество запросов с текущего IP",
          "code": 429,
          "exceptionName": "Rate limit exceeded",
          "exceptionMessage": "Вы <b>превысили</b> количество доступных запросов, попробуйте чуть позже. <b>Имейте совесть</b>, не нагружайте сервер по полной"
        }
      rate-limits:
        - bandwidths:
            - capacity: 10000
              time: 1
              unit: minutes
              refill-speed: interval
          cache-key: getRemoteAddr()
          skip-condition: '@limitService.isSkipped(getRemoteAddr())'

rate-limiter:
  whitelist: 127.0.0.1
